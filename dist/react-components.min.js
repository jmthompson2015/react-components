!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactComponent=t()}(this,(function(){"use strict";class e extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:a}=e.target;s(t,a)}render(){const{item:e,isChecked:t,labelFunction:s}=this.props,a=ReactDOMFactories.input({key:`${e.key}${t}`,className:"v-mid",type:"checkbox",checked:t,onChange:this.handleChange}),n=s(e);return ReactDOMFactories.label({className:"db v-mid"},a,n)}}e.propTypes={item:PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape(),PropTypes.arrayOf()]).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool,labelFunction:PropTypes.func},e.defaultProps={isChecked:!1,labelFunction:e=>ReactDOMFactories.span({className:"v-mid"},e)};const t={},s=(e,t)=>({...e,...t});t.createButton=(e,t,a,n={})=>{const o=s(n,{key:t,className:a});return ReactDOMFactories.button(o,e)},t.createCell=(e,t,a,n={})=>{const o=s(n,{key:t,className:"dtc"+(a?` ${a}`:"")});return ReactDOMFactories.div(o,e)},t.createFlexbox=(e,t,a,n={})=>{const o=s(n,{key:t,className:"flex"+(a?` ${a}`:"")});return ReactDOMFactories.div(o,e)},t.createFlexboxWrap=(e,t,a,n={})=>{const o=s(n,{key:t,className:"flex flex-wrap"+(a?` ${a}`:"")});return ReactDOMFactories.div(o,e)},t.createImg=(e,t,a,n={})=>{const o=s(n,{src:e,key:t,className:a});return ReactDOMFactories.img(o)},t.createRow=(e,t,a,n={})=>{const o=s(n,{key:t,className:"dt-row"+(a?` ${a}`:"")});return ReactDOMFactories.div(o,e)},t.createSpan=(e,t,a,n={})=>{const o=s(n,{key:t,className:a});return ReactDOMFactories.span(o,e)},t.createTable=(e,t,a,n={})=>{const o=s(n,{key:t,className:"dt"+(a?` ${a}`:"")});return ReactDOMFactories.div(o,e)};class a extends React.PureComponent{constructor(e){super(e);const{selectedItems:t}=this.props;this.state={selectedItems:t},this.handleApply=this.handleApplyFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this),this.handleSelectAll=this.handleSelectAllFunction.bind(this),this.handleSelectNone=this.handleSelectNoneFunction.bind(this)}createButtonTable(){const{useSelectButtons:e}=this.props,s=t.createButton("Apply","applyButton",void 0,{onClick:this.handleApply}),a=t.createCell(s,"applyCell");let n=a;if(e){const e=t.createButton("Select All","selectAllButton",void 0,{onClick:this.handleSelectAll}),s=t.createButton("Select None","selectNoneButton",void 0,{onClick:this.handleSelectNone});n=[t.createCell(e,"selectAllCell"),t.createCell(s,"selectNoneCell"),a]}const o=t.createRow(n,"buttonRow");return t.createTable(o,"buttonTable","button-table")}handleApplyFunction(){const{applyOnClick:e}=this.props,{selectedItems:t}=this.state;e(t)}handleChangeFunction(e,t){const{selectedItems:s}=this.state;let a;a=t?[...s,e]:s.filter((t=>t!==e)),this.setState({selectedItems:a})}handleSelectAllFunction(){const{items:e}=this.props;this.setState({selectedItems:e})}handleSelectNoneFunction(){this.setState({selectedItems:[]})}render(){const{items:s,keyFunction:a,labelFunction:n}=this.props,{selectedItems:o}=this.state,i=s.map((s=>{const i=o.includes(s),r=React.createElement(e,{item:s,isChecked:i,labelFunction:n,onChange:this.handleChange}),l=t.createCell(r);return t.createRow(l,a(s))})),r=t.createTable(i,"checkboxesTable","checkboxes-table"),l=ReactDOMFactories.div({className:"scroll-pane"},r),c=t.createCell(l,"checkboxesCell","checkboxes-cell"),p=t.createCell(this.createButtonTable(),"buttonCell","button-cell"),d=[t.createRow(c,"checkboxRow","checkbox-row"),t.createRow(p,"buttonRow","button-row")];return t.createTable(d,"checkboxPanel","checkbox-panel")}}a.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf().isRequired,keyFunction:PropTypes.func,labelFunction:PropTypes.func,selectedItems:PropTypes.arrayOf(),useSelectButtons:PropTypes.bool},a.defaultProps={keyFunction:e=>"object"==typeof e?JSON.stringify(e):e,labelFunction:void 0,selectedItems:[],useSelectButtons:!1};class n extends React.Component{constructor(e){super(e),this.state={isExpanded:e.isExpanded},this.toggleExpand=this.toggleExpandFunction.bind(this)}createElementCell(){const{element:e}=this.props,{isExpanded:t}=this.state,s=t?"dtc pa1 v-mid":"dn";return ReactDOMFactories.div({key:"elementCell",className:s},e)}createHeaderCell(){const{header:e,headerClass:s}=this.props,{isExpanded:a}=this.state,n=t.createCell(e,"headerCell",s),o=a?"▶":"▼",i=ReactDOMFactories.div({key:"expandCell",onClick:this.toggleExpand},o),r=t.createRow([n,i],"headerExpandRow"),l=t.createTable(r,"headerExpandTable","w-100");return t.createCell(l,"headerCell")}toggleExpandFunction(){const{isExpanded:e}=this.state;this.setState({isExpanded:!e})}render(){const{className:e}=this.props,s=this.createHeaderCell(),a=this.createElementCell(),n=[t.createRow(s,"headerRow"),t.createRow(a,"elementRow")];return t.createTable(n,"collapsiblePaneTable",e)}}n.propTypes={element:PropTypes.shape().isRequired,className:PropTypes.string,header:PropTypes.string,headerClass:PropTypes.string,isExpanded:PropTypes.bool},n.defaultProps={className:"bg-light-gray ma1",header:void 0,headerClass:"b f5 ph1 pt1 tc",isExpanded:!0};const o=(e,t)=>new Promise(((s,a)=>{const n=new Image;n.addEventListener("load",(()=>{t&&console.log(`Loaded image: ${e} ${n.width}x${n.height}`),s(n)})),n.addEventListener("error",(e=>a(e))),n.src=e}));class i extends React.PureComponent{constructor(e){super(e),this.state={imageMap:{}},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.paint()}componentDidUpdate(){this.paint()}handleOnClickFunction(e){const{onClick:t}=this.props;t(e)}loadImages(){const{images:e,isVerbose:t}=this.props;for(let s=0;s<e.length;s+=1)o(e[s],t).then((t=>{const{imageMap:a}=this.state,n={...a};n[e[s]]=t,this.setState({imageMap:n})}))}paint(){const{drawLayerFunctions:e,height:t,customKey:s,width:a}=this.props,{imageMap:n}=this.state,o=document.getElementById(s).getContext("2d");e.forEach((e=>{e(o,a,t,n)}))}render(){const{backgroundColor:e,clientProps:t,customKey:s,height:a,title:n,width:o}=this.props,i={...{id:s,key:s,height:a,onClick:this.handleOnClick,style:{backgroundColor:e},title:n,width:o},...t};return ReactDOMFactories.canvas(i)}}i.propTypes={drawLayerFunctions:PropTypes.arrayOf(PropTypes.func).isRequired,backgroundColor:PropTypes.string,clientProps:PropTypes.shape(),customKey:PropTypes.string,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isVerbose:PropTypes.bool,onClick:PropTypes.func,title:PropTypes.string,width:PropTypes.number},i.defaultProps={backgroundColor:void 0,clientProps:{},customKey:"hexBoardCanvas",height:480,images:[],isVerbose:!1,onClick:()=>{},title:void 0,width:640};class r extends React.Component{constructor(e){super(e);const{initialInput:t}=this.props;this.state={input:t}}render(){const{buttons:e,buttonsClass:t,icon:s,message:a,messageClass:n,panelClass:o,title:i,titleClass:r}=this.props,l=[],c=ReactDOMFactories.td({colSpan:2,className:r},i);l.push(ReactDOMFactories.tr({key:0},c));const p=ReactDOMFactories.td({key:0,rowSpan:2},s),d=ReactDOMFactories.td({key:1,className:n},a);l.push(ReactDOMFactories.tr({key:1},[p,d]));const{input:h}=this.state,u=ReactDOMFactories.td({},h);l.push(ReactDOMFactories.tr({key:2},u));const y=ReactDOMFactories.td({colSpan:2,className:t},e);return l.push(ReactDOMFactories.tr({key:3},y)),ReactDOMFactories.table({className:o},ReactDOMFactories.tbody({},l))}}r.propTypes={buttons:PropTypes.shape().isRequired,message:PropTypes.oneOfType([PropTypes.string,PropTypes.shape()]).isRequired,title:PropTypes.string.isRequired,buttonsClass:PropTypes.string,icon:PropTypes.shape(),initialInput:PropTypes.shape(),messageClass:PropTypes.string,panelClass:PropTypes.string,titleClass:PropTypes.string},r.defaultProps={buttonsClass:"pa2 tr",icon:void 0,initialInput:void 0,messageClass:"",panelClass:"ba center v-top",titleClass:"b bg-light-gray f4 tc"};class l extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:a}=e.target;s(t.key,a)}render(){const{item:e,isChecked:t}=this.props,s=ReactDOMFactories.input({key:`${e.key}${t}`,type:"radio",checked:t,onChange:this.handleChange,style:{verticalAlign:"middle"}}),a=ReactDOMFactories.span({style:{verticalAlign:"middle"}},e.label);return ReactDOMFactories.label({style:{display:"block",verticalAlign:"middle"}},s,a)}}l.propTypes={item:PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired}).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool},l.defaultProps={isChecked:!1};class c extends React.PureComponent{constructor(e){super(e);const{selected:t}=this.props;this.state={selected:t},this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){this.setState({selected:e});const{applyOnClick:t}=this.props;t(e)}render(){const{items:e}=this.props,{selected:s}=this.state,a=e.map((e=>{const a=e.key===s,n=React.createElement(l,{item:e,isChecked:a,onChange:this.handleChange}),o=t.createCell(n);return t.createRow(o,e.key)}));return t.createTable(a,"radioButtonTable","radio-button-table")}}c.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,selected:PropTypes.string.isRequired};class p extends React.Component{render(){const{className:e,element:s,elementClass:a,title:n,titleClass:o}=this.props,i=t.createCell(n,"titleCell",o),r=t.createCell(s,"elementCell",a),l=[t.createRow(i,"titleRow"),t.createRow(r,"elementRow")];return t.createTable(l,"titledElementTable",e)}}p.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,elementClass:PropTypes.string,titleClass:PropTypes.string},p.defaultProps={className:"bg-light-gray ma1",elementClass:"ma0 tc v-mid",titleClass:"b f5 ph1 pt1 tc"};const d={};return d.CheckboxPanel=a,d.CollapsiblePane=n,d.LayeredCanvas=i,d.OptionPane=r,d.RadioButtonPanel=c,d.ReactUtilities=t,d.TitledElement=p,Object.freeze(d),d}));
