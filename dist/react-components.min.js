!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).ReactComponent=t()}(this,(function(){"use strict";class e extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:a}=e.target;s(t.key,a)}render(){const{item:e,isChecked:t}=this.props,s=ReactDOMFactories.input({key:`${e.key}${t}`,type:"checkbox",checked:t,onChange:this.handleChange,style:{verticalAlign:"middle"}}),a=ReactDOMFactories.span({style:{verticalAlign:"middle"}},e.label);return ReactDOMFactories.label({style:{display:"block",verticalAlign:"middle"}},s,a)}}e.propTypes={item:PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired}).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool},e.defaultProps={isChecked:!1};const t={},s=(e,t)=>({...e,...t});t.createButton=(e,t,a,n={})=>{const i=s(n,{key:t,className:a});return ReactDOMFactories.button(i,e)},t.createCell=(e,t,a,n={})=>{const i=s(n,{key:t,className:`dtc${a?` ${a}`:""}`});return ReactDOMFactories.div(i,e)},t.createFlexbox=(e,t,a,n={})=>{const i=s(n,{key:t,className:`flex${a?` ${a}`:""}`});return ReactDOMFactories.div(i,e)},t.createFlexboxWrap=(e,t,a,n={})=>{const i=s(n,{key:t,className:`flex flex-wrap${a?` ${a}`:""}`});return ReactDOMFactories.div(i,e)},t.createImg=(e,t,a,n={})=>{const i=s(n,{src:e,key:t,className:a});return ReactDOMFactories.img(i)},t.createRow=(e,t,a,n={})=>{const i=s(n,{key:t,className:`dt-row${a?` ${a}`:""}`});return ReactDOMFactories.div(i,e)},t.createSpan=(e,t,a,n={})=>{const i=s(n,{key:t,className:a});return ReactDOMFactories.span(i,e)},t.createTable=(e,t,a,n={})=>{const i=s(n,{key:t,className:`dt${a?` ${a}`:""}`});return ReactDOMFactories.div(i,e)};class a extends React.PureComponent{constructor(e){super(e);const{itemToChecked:t}=this.props;this.state={itemToChecked:t},this.handleApply=this.handleApplyFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this),this.handleSelectAll=this.handleSelectAllFunction.bind(this),this.handleSelectNone=this.handleSelectNoneFunction.bind(this)}createButtonTable(){const{useSelectButtons:e}=this.props,s=t.createButton("Apply","applyButton",void 0,{onClick:this.handleApply}),a=t.createCell(s,"applyCell");let n=a;if(e){const e=t.createButton("Select All","selectAllButton",void 0,{onClick:this.handleSelectAll}),s=t.createButton("Select None","selectNoneButton",void 0,{onClick:this.handleSelectNone});n=[t.createCell(e,"selectAllCell"),t.createCell(s,"selectNoneCell"),a]}const i=t.createRow(n,"buttonRow");return t.createTable(i,"buttonTable")}handleApplyFunction(){const{applyOnClick:e}=this.props,{itemToChecked:t}=this.state;e(t)}handleChangeFunction(e,t){const{itemToChecked:s}=this.state,a={...s,[e]:t};this.setState({itemToChecked:a})}handleSelectAllFunction(){const{items:e}=this.props,t=e.reduce((e,t)=>({...e,[t.key]:!0}),{});this.setState({itemToChecked:t})}handleSelectNoneFunction(){this.setState({itemToChecked:{}})}render(){const{items:s}=this.props,{itemToChecked:a}=this.state,n=s.map(s=>{const n=a[s.key],i=React.createElement(e,{item:s,isChecked:n,onChange:this.handleChange}),o=t.createCell(i);return t.createRow(o,s.key)}),i=t.createTable(n,"checkboxTable","checkbox-panel"),o=t.createCell(this.createButtonTable(),"buttonTable","button-panel"),r=[t.createRow(i,"checkboxTableRow"),t.createRow(o,"buttonRow")];return t.createTable(r,"checkboxTable")}}a.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,itemToChecked:PropTypes.shape().isRequired,useSelectButtons:PropTypes.bool},a.defaultProps={useSelectButtons:!1};class n extends React.Component{constructor(e){super(e),this.state={isExpanded:e.isExpanded},this.toggleExpand=this.toggleExpandFunction.bind(this)}createElementCell(){const{element:e}=this.props,{isExpanded:t}=this.state,s=t?"dtc pa1 v-mid":"dn";return ReactDOMFactories.div({key:"elementCell",className:s},e)}createHeaderCell(){const{header:e,headerClass:s}=this.props,{isExpanded:a}=this.state,n=t.createCell(e,"headerCell",s),i=a?"▶":"▼",o=ReactDOMFactories.div({key:"expandCell",onClick:this.toggleExpand},i),r=t.createRow([n,o],"headerExpandRow"),l=t.createTable(r,"headerExpandTable","w-100");return t.createCell(l,"headerCell")}toggleExpandFunction(){const{isExpanded:e}=this.state;this.setState({isExpanded:!e})}render(){const{className:e}=this.props,s=this.createHeaderCell(),a=this.createElementCell(),n=[t.createRow(s,"headerRow"),t.createRow(a,"elementRow")];return t.createTable(n,"collapsiblePaneTable",e)}}n.propTypes={element:PropTypes.shape().isRequired,className:PropTypes.string,header:PropTypes.string,headerClass:PropTypes.string,isExpanded:PropTypes.bool},n.defaultProps={className:"bg-light-gray ma1",header:void 0,headerClass:"b f5 ph1 pt1 tc",isExpanded:!0};const i=(e,t)=>new Promise((s,a)=>{const n=new Image;n.addEventListener("load",()=>{t&&console.log(`Loaded image: ${e} ${n.width}x${n.height}`),s(n)}),n.addEventListener("error",e=>a(e)),n.src=e});class o extends React.PureComponent{constructor(e){super(e),this.state={imageMap:{}},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.paint()}componentDidUpdate(){this.paint()}handleOnClickFunction(e){const{onClick:t}=this.props;t(e)}loadImages(){const{images:e,isVerbose:t}=this.props;for(let s=0;s<e.length;s+=1)i(e[s],t).then(t=>{const{imageMap:a}=this.state,n={...a};n[e[s]]=t,this.setState({imageMap:n})})}paint(){const{drawLayerFunctions:e,height:t,customKey:s,width:a}=this.props,{imageMap:n}=this.state,i=document.getElementById(s).getContext("2d");e.forEach(e=>{e(i,a,t,n)})}render(){const{backgroundColor:e,clientProps:t,customKey:s,height:a,title:n,width:i}=this.props,o={...{id:s,key:s,height:a,onClick:this.handleOnClick,style:{backgroundColor:e},title:n,width:i},...t};return ReactDOMFactories.canvas(o)}}o.propTypes={drawLayerFunctions:PropTypes.arrayOf(PropTypes.func).isRequired,backgroundColor:PropTypes.string,clientProps:PropTypes.shape(),customKey:PropTypes.string,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isVerbose:PropTypes.bool,onClick:PropTypes.func,title:PropTypes.string,width:PropTypes.number},o.defaultProps={backgroundColor:void 0,clientProps:{},customKey:"hexBoardCanvas",height:480,images:[],isVerbose:!1,onClick:()=>{},title:void 0,width:640};class r extends React.Component{constructor(e){super(e);const{initialInput:t}=this.props;this.state={input:t}}render(){const{buttons:e,buttonsClass:t,icon:s,message:a,messageClass:n,panelClass:i,title:o,titleClass:r}=this.props,l=[],c=ReactDOMFactories.td({colSpan:2,className:r},o);l.push(ReactDOMFactories.tr({key:0},c));const p=ReactDOMFactories.td({key:0,rowSpan:2},s),d=ReactDOMFactories.td({key:1,className:n},a);l.push(ReactDOMFactories.tr({key:1},[p,d]));const{input:h}=this.state,u=ReactDOMFactories.td({},h);l.push(ReactDOMFactories.tr({key:2},u));const y=ReactDOMFactories.td({colSpan:2,className:t},e);return l.push(ReactDOMFactories.tr({key:3},y)),ReactDOMFactories.table({className:i},ReactDOMFactories.tbody({},l))}}r.propTypes={buttons:PropTypes.shape().isRequired,message:PropTypes.oneOfType([PropTypes.string,PropTypes.shape()]).isRequired,title:PropTypes.string.isRequired,buttonsClass:PropTypes.string,icon:PropTypes.shape(),initialInput:PropTypes.shape(),messageClass:PropTypes.string,panelClass:PropTypes.string,titleClass:PropTypes.string},r.defaultProps={buttonsClass:"pa2 tr",icon:void 0,initialInput:void 0,messageClass:"",panelClass:"ba center v-top",titleClass:"b bg-light-gray f4 tc"};class l extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:a}=e.target;s(t.key,a)}render(){const{item:e,isChecked:t}=this.props,s=ReactDOMFactories.input({key:`${e.key}${t}`,type:"radio",checked:t,onChange:this.handleChange,style:{verticalAlign:"middle"}}),a=ReactDOMFactories.span({style:{verticalAlign:"middle"}},e.label);return ReactDOMFactories.label({style:{display:"block",verticalAlign:"middle"}},s,a)}}l.propTypes={item:PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired}).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool},l.defaultProps={isChecked:!1};class c extends React.PureComponent{constructor(e){super(e);const{selected:t}=this.props;this.state={selected:t},this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){this.setState({selected:e});const{applyOnClick:t}=this.props;t(e)}render(){const{items:e}=this.props,{selected:s}=this.state,a=e.map(e=>{const a=e.key===s,n=React.createElement(l,{item:e,isChecked:a,onChange:this.handleChange}),i=t.createCell(n);return t.createRow(i,e.key)});return t.createTable(a,"radioButtonTable","radio-button-table")}}c.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,selected:PropTypes.string.isRequired};class p extends React.Component{render(){const{className:e,element:s,elementClass:a,title:n,titleClass:i}=this.props,o=t.createCell(n,"titleCell",i),r=t.createCell(s,"elementCell",a),l=[t.createRow(o,"titleRow"),t.createRow(r,"elementRow")];return t.createTable(l,"titledElementTable",e)}}p.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,elementClass:PropTypes.string,titleClass:PropTypes.string},p.defaultProps={className:"bg-light-gray ma1",elementClass:"ma0 tc v-mid",titleClass:"b f5 ph1 pt1 tc"};const d={};return d.CheckboxPanel=a,d.CollapsiblePane=n,d.LayeredCanvas=o,d.OptionPane=r,d.RadioButtonPanel=c,d.ReactUtilities=t,d.TitledElement=p,Object.freeze(d),d}));
