!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactComponent=t()}(this,(function(){"use strict";class e extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:n}=e.target;s(t,n)}render(){const{item:e,isChecked:t,labelFunction:s}=this.props,n=ReactDOMFactories.input({key:`${e.key}${t}`,className:"v-mid",type:"checkbox",checked:t,onChange:this.handleChange}),a=s(e);return ReactDOMFactories.label({className:"db v-mid"},n,a)}}e.propTypes={item:PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape(),PropTypes.arrayOf()]).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool,labelFunction:PropTypes.func},e.defaultProps={isChecked:!1,labelFunction:e=>ReactDOMFactories.span({className:"v-mid"},e)};const t={},s=(e,t)=>({...e,...t});t.createButton=(e,t,n,a={})=>{const i=s(a,{key:t,className:n});return ReactDOMFactories.button(i,e)},t.createCell=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dtc"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createFlexbox=(e,t,n,a={})=>{const i=s(a,{key:t,className:"flex"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createFlexboxWrap=(e,t,n,a={})=>{const i=s(a,{key:t,className:"flex flex-wrap"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createImg=(e,t,n,a={})=>{const i=s(a,{src:e,key:t,className:n});return ReactDOMFactories.img(i)},t.createRow=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dt-row"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createSpan=(e,t,n,a={})=>{const i=s(a,{key:t,className:n});return ReactDOMFactories.span(i,e)},t.createTable=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dt"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)};class n extends React.PureComponent{constructor(e){super(e);const{selectedItems:t}=this.props;this.state={selectedItems:t},this.handleApply=this.handleApplyFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this),this.handleSelectAll=this.handleSelectAllFunction.bind(this),this.handleSelectNone=this.handleSelectNoneFunction.bind(this)}createButtonTable(){const{useSelectButtons:e}=this.props,s=t.createButton("Apply","applyButton",void 0,{onClick:this.handleApply}),n=t.createCell(s,"applyCell");let a=n;if(e){const e=t.createButton("Select All","selectAllButton",void 0,{onClick:this.handleSelectAll}),s=t.createButton("Select None","selectNoneButton",void 0,{onClick:this.handleSelectNone});a=[t.createCell(e,"selectAllCell"),t.createCell(s,"selectNoneCell"),n]}const i=t.createRow(a,"buttonRow");return t.createTable(i,"buttonTable","button-table")}handleApplyFunction(){const{applyOnClick:e}=this.props,{selectedItems:t}=this.state;e(t)}handleChangeFunction(e,t){const{selectedItems:s}=this.state;let n;n=t?[...s,e]:s.filter((t=>t!==e)),this.setState({selectedItems:n})}handleSelectAllFunction(){const{items:e}=this.props;this.setState({selectedItems:e})}handleSelectNoneFunction(){this.setState({selectedItems:[]})}render(){const{items:s,keyFunction:n,labelFunction:a}=this.props,{selectedItems:i}=this.state,o=s.map((s=>{const o=i.includes(s),r=React.createElement(e,{item:s,isChecked:o,labelFunction:a,onChange:this.handleChange}),l=t.createCell(r);return t.createRow(l,n(s))})),r=t.createTable(o,"checkboxesTable","checkboxes-table"),l=ReactDOMFactories.div({className:"scroll-pane"},r),c=t.createCell(l,"checkboxesCell","checkboxes-cell"),p=t.createCell(this.createButtonTable(),"buttonCell","button-cell"),d=[t.createRow(c,"checkboxRow","checkbox-row"),t.createRow(p,"buttonRow","button-row")];return t.createTable(d,"checkboxPanel","checkbox-panel")}}n.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf().isRequired,keyFunction:PropTypes.func,labelFunction:PropTypes.func,selectedItems:PropTypes.arrayOf(),useSelectButtons:PropTypes.bool},n.defaultProps={keyFunction:e=>"object"==typeof e?JSON.stringify(e):e,labelFunction:void 0,selectedItems:[],useSelectButtons:!1};class a extends React.Component{constructor(e){super(e),this.state={isExpanded:e.isExpanded},this.toggleExpand=this.toggleExpandFunction.bind(this)}createElementCell(){const{element:e}=this.props,{isExpanded:t}=this.state,s=t?"dtc pa1 v-mid":"dn";return ReactDOMFactories.div({key:"elementCell",className:s},e)}createHeaderCell(){const{header:e,headerClass:s}=this.props,{isExpanded:n}=this.state,a=t.createCell(e,"headerCell",s),i=n?"▶":"▼",o=ReactDOMFactories.div({key:"expandCell",onClick:this.toggleExpand},i),r=t.createRow([a,o],"headerExpandRow"),l=t.createTable(r,"headerExpandTable","w-100");return t.createCell(l,"headerCell")}toggleExpandFunction(){const{isExpanded:e}=this.state;this.setState({isExpanded:!e})}render(){const{className:e}=this.props,s=this.createHeaderCell(),n=this.createElementCell(),a=[t.createRow(s,"headerRow"),t.createRow(n,"elementRow")];return t.createTable(a,"collapsiblePaneTable",e)}}a.propTypes={element:PropTypes.shape().isRequired,className:PropTypes.string,header:PropTypes.string,headerClass:PropTypes.string,isExpanded:PropTypes.bool},a.defaultProps={className:"bg-light-gray ma1",header:void 0,headerClass:"b f5 ph1 pt1 tc",isExpanded:!0};const i=(e,t)=>new Promise(((s,n)=>{const a=new Image;a.addEventListener("load",(()=>{t&&console.log(`Loaded image: ${e} ${a.width}x${a.height}`),s(a)})),a.addEventListener("error",(e=>n(e))),a.src=e}));class o extends React.PureComponent{constructor(e){super(e),this.state={imageMap:{}},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.paint()}componentDidUpdate(){this.paint()}handleOnClickFunction(e){const{onClick:t}=this.props;t(e)}loadImages(){const{images:e,isVerbose:t}=this.props;for(let s=0;s<e.length;s+=1)i(e[s],t).then((t=>{const{imageMap:n}=this.state,a={...n};a[e[s]]=t,this.setState({imageMap:a})}))}paint(){const{drawLayerFunctions:e,height:t,customKey:s,width:n}=this.props,{imageMap:a}=this.state,i=document.getElementById(s).getContext("2d");e.forEach((e=>{e(i,n,t,a)}))}render(){const{backgroundColor:e,clientProps:t,customKey:s,height:n,title:a,width:i}=this.props,o={...{id:s,key:s,height:n,onClick:this.handleOnClick,style:{backgroundColor:e},title:a,width:i},...t};return ReactDOMFactories.canvas(o)}}o.propTypes={drawLayerFunctions:PropTypes.arrayOf(PropTypes.func).isRequired,backgroundColor:PropTypes.string,clientProps:PropTypes.shape(),customKey:PropTypes.string,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isVerbose:PropTypes.bool,onClick:PropTypes.func,title:PropTypes.string,width:PropTypes.number},o.defaultProps={backgroundColor:void 0,clientProps:{},customKey:"hexBoardCanvas",height:480,images:[],isVerbose:!1,onClick:()=>{},title:void 0,width:640};class r extends React.PureComponent{constructor(e){super(e);const{initialValue:t}=this.props;this.state={value:t},this.handleBlur=this.handleBlurFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this)}handleBlurFunction(){const{onBlur:e}=this.props,{value:t}=this.state;e(Number(t))}handleChangeFunction(e){const{value:t}=e.target,s=Number(t);this.setState({value:s})}render(){const{className:e,id:t,initialValue:s,max:n,min:a,step:i}=this.props;return ReactDOMFactories.input({id:t,type:"number",className:e,defaultValue:s,max:n,min:a,step:i,onBlur:this.handleBlur,onChange:this.handleChange})}}r.propTypes={onBlur:PropTypes.func.isRequired,id:PropTypes.string,className:PropTypes.string,initialValue:PropTypes.number,max:PropTypes.number,min:PropTypes.number,step:PropTypes.number},r.defaultProps={id:"numberInput",className:void 0,initialValue:0,max:void 0,min:void 0,step:void 0};class l extends React.Component{constructor(e){super(e);const{initialInput:t}=this.props;this.state={input:t}}render(){const{buttons:e,buttonsClass:t,icon:s,message:n,messageClass:a,panelClass:i,title:o,titleClass:r}=this.props,l=[],c=ReactDOMFactories.td({colSpan:2,className:r},o);l.push(ReactDOMFactories.tr({key:0},c));const p=ReactDOMFactories.td({key:0,rowSpan:2},s),d=ReactDOMFactories.td({key:1,className:a},n);l.push(ReactDOMFactories.tr({key:1},[p,d]));const{input:h}=this.state,u=ReactDOMFactories.td({},h);l.push(ReactDOMFactories.tr({key:2},u));const y=ReactDOMFactories.td({colSpan:2,className:t},e);return l.push(ReactDOMFactories.tr({key:3},y)),ReactDOMFactories.table({className:i},ReactDOMFactories.tbody({},l))}}l.propTypes={buttons:PropTypes.shape().isRequired,message:PropTypes.oneOfType([PropTypes.string,PropTypes.shape()]).isRequired,title:PropTypes.string.isRequired,buttonsClass:PropTypes.string,icon:PropTypes.shape(),initialInput:PropTypes.shape(),messageClass:PropTypes.string,panelClass:PropTypes.string,titleClass:PropTypes.string},l.defaultProps={buttonsClass:"pa2 tr",icon:void 0,initialInput:void 0,messageClass:"",panelClass:"ba center v-top",titleClass:"b bg-light-gray f4 tc"};class c extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:n}=e.target;s(t.key,n)}render(){const{item:e,isChecked:t}=this.props,s=ReactDOMFactories.input({key:`${e.key}${t}`,type:"radio",checked:t,onChange:this.handleChange,style:{verticalAlign:"middle"}}),n=ReactDOMFactories.span({style:{verticalAlign:"middle"}},e.label);return ReactDOMFactories.label({style:{display:"block",verticalAlign:"middle"}},s,n)}}c.propTypes={item:PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired}).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool},c.defaultProps={isChecked:!1};class p extends React.PureComponent{constructor(e){super(e);const{selected:t}=this.props;this.state={selected:t},this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){this.setState({selected:e});const{applyOnClick:t}=this.props;t(e)}render(){const{items:e}=this.props,{selected:s}=this.state,n=e.map((e=>{const n=e.key===s,a=React.createElement(c,{item:e,isChecked:n,onChange:this.handleChange}),i=t.createCell(a);return t.createRow(i,e.key)}));return t.createTable(n,"radioButtonTable","radio-button-table")}}p.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,selected:PropTypes.string.isRequired};class d extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(){const{id:e,onChange:t}=this.props,s=document.getElementById(e);t(s.options[s.selectedIndex].value)}render(){const{id:e,values:t,initialValue:s}=this.props,n=R.map((e=>{return t=e.key,s=e.label,ReactDOMFactories.option({key:t,value:t},s);var t,s}),t);return ReactDOMFactories.select({id:e,defaultValue:s,onChange:this.handleChange},n)}}d.propTypes={values:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,onChange:PropTypes.func.isRequired,id:PropTypes.string,initialValue:PropTypes.string},d.defaultProps={id:"select",initialValue:void 0};class h extends React.PureComponent{constructor(e){super(e);const{initialValue:t}=this.props;this.state={value:t},this.handleBlur=this.handleBlurFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this)}handleBlurFunction(){const{onBlur:e}=this.props,{value:t}=this.state;e(t)}handleChangeFunction(e){const{value:t}=e.target;this.setState({value:t})}render(){const{className:e,id:t,initialValue:s}=this.props;return ReactDOMFactories.input({id:t,type:"text",className:e,defaultValue:s,onBlur:this.handleBlur,onChange:this.handleChange})}}h.propTypes={onBlur:PropTypes.func.isRequired,id:PropTypes.string,className:PropTypes.string,initialValue:PropTypes.string},h.defaultProps={id:"stringInput",className:void 0,initialValue:""};class u extends React.Component{render(){const{className:e,element:s,elementClass:n,title:a,titleClass:i}=this.props,o=t.createCell(a,"titleCell",i),r=t.createCell(s,"elementCell",n),l=[t.createRow(o,"titleRow"),t.createRow(r,"elementRow")];return t.createTable(l,"titledElementTable",e)}}u.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,elementClass:PropTypes.string,titleClass:PropTypes.string},u.defaultProps={className:"bg-light-gray ma1",elementClass:"ma0 tc v-mid",titleClass:"b f5 ph1 pt1 tc"};const y={};return y.CheckboxPanel=n,y.CollapsiblePane=a,y.LayeredCanvas=o,y.NumberInput=r,y.OptionPane=l,y.RadioButtonPanel=p,y.ReactUtilities=t,y.Select=d,y.StringInput=h,y.TitledElement=u,Object.freeze(y),y}));
