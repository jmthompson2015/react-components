!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).ReactComponent=t()}(this,(function(){"use strict";const e=(e,t)=>new Promise((s,a)=>{const o=new Image;o.addEventListener("load",()=>{t&&console.log(`Loaded image: ${e} ${o.width}x${o.height}`),s(o)}),o.addEventListener("error",e=>a(e)),o.src=e});class t extends React.PureComponent{constructor(e){super(e),this.state={imageMap:{}},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.paint()}componentDidUpdate(){this.paint()}handleOnClickFunction(e){const{onClick:t}=this.props;t(e)}loadImages(){const{images:t,isVerbose:s}=this.props;for(let a=0;a<t.length;a+=1)e(t[a],s).then(e=>{const{imageMap:s}=this.state,o={...s};o[t[a]]=e,this.setState({imageMap:o})})}paint(){const{drawLayerFunctions:e,height:t,customKey:s,width:a}=this.props,{imageMap:o}=this.state,r=document.getElementById(s).getContext("2d");e.forEach(e=>{e(r,a,t,o)})}render(){const{backgroundColor:e,clientProps:t,customKey:s,height:a,title:o,width:r}=this.props,i={...{id:s,key:s,height:a,onClick:this.handleOnClick,style:{backgroundColor:e},title:o,width:r},...t};return ReactDOMFactories.canvas(i)}}t.propTypes={drawLayerFunctions:PropTypes.arrayOf(PropTypes.func).isRequired,backgroundColor:PropTypes.string,clientProps:PropTypes.shape(),customKey:PropTypes.string,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isVerbose:PropTypes.bool,onClick:PropTypes.func,title:PropTypes.string,width:PropTypes.number},t.defaultProps={backgroundColor:void 0,clientProps:{},customKey:"hexBoardCanvas",height:480,images:[],isVerbose:!1,onClick:()=>{},title:void 0,width:640};class s extends React.Component{constructor(e){super(e);const{initialInput:t}=this.props;this.state={input:t}}render(){const{buttons:e,buttonsClass:t,icon:s,message:a,messageClass:o,panelClass:r,title:i,titleClass:n}=this.props,c=[],p=ReactDOMFactories.td({colSpan:2,className:n},i);c.push(ReactDOMFactories.tr({key:0},p));const l=ReactDOMFactories.td({key:0,rowSpan:2},s),d=ReactDOMFactories.td({key:1,className:o},a);c.push(ReactDOMFactories.tr({key:1},[l,d]));const{input:u}=this.state,y=ReactDOMFactories.td({},u);c.push(ReactDOMFactories.tr({key:2},y));const h=ReactDOMFactories.td({colSpan:2,className:t},e);return c.push(ReactDOMFactories.tr({key:3},h)),ReactDOMFactories.table({className:r},ReactDOMFactories.tbody({},c))}}s.propTypes={buttons:PropTypes.shape().isRequired,message:PropTypes.oneOfType([PropTypes.string,PropTypes.shape()]).isRequired,title:PropTypes.string.isRequired,buttonsClass:PropTypes.string,icon:PropTypes.shape(),initialInput:PropTypes.shape(),messageClass:PropTypes.string,panelClass:PropTypes.string,titleClass:PropTypes.string},s.defaultProps={buttonsClass:"pa2 tr",icon:void 0,initialInput:void 0,messageClass:"",panelClass:"ba center v-top",titleClass:"b bg-light-gray f4 tc"};const a={},o=(e,t)=>({...e,...t});a.createButton=(e,t,s,a={})=>{const r=o(a,{key:t,className:s});return ReactDOMFactories.button(r,e)},a.createCell=(e,t,s,a={})=>{const r=o(a,{key:t,className:`dtc${s?` ${s}`:""}`});return ReactDOMFactories.div(r,e)},a.createFlexbox=(e,t,s,a={})=>{const r=o(a,{key:t,className:`flex${s?` ${s}`:""}`});return ReactDOMFactories.div(r,e)},a.createFlexboxWrap=(e,t,s,a={})=>{const r=o(a,{key:t,className:`flex flex-wrap${s?` ${s}`:""}`});return ReactDOMFactories.div(r,e)},a.createImg=(e,t,s,a={})=>{const r=o(a,{src:e,key:t,className:s});return ReactDOMFactories.img(r)},a.createRow=(e,t,s,a={})=>{const r=o(a,{key:t,className:`dt-row${s?` ${s}`:""}`});return ReactDOMFactories.div(r,e)},a.createSpan=(e,t,s,a={})=>{const r=o(a,{key:t,className:s});return ReactDOMFactories.span(r,e)},a.createTable=(e,t,s,a={})=>{const r=o(a,{key:t,className:`dt${s?` ${s}`:""}`});return ReactDOMFactories.div(r,e)};class r extends React.Component{render(){const{className:e,element:t,title:s,titleClass:o}=this.props,r=a.createCell(s,"titleCell",o),i=a.createCell(t,"elementCell"),n=[a.createRow(r,"titleRow"),a.createRow(i,"elementRow")];return a.createTable(n,"titledElementTable",e)}}r.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,titleClass:PropTypes.string},r.defaultProps={className:"bg-light-gray ma1",titleClass:"b f5 ph1 pt1 tc"};const i={};return i.LayeredCanvas=t,i.OptionPane=s,i.ReactUtilities=a,i.TitledElement=r,Object.freeze(i),i}));
