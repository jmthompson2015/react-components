!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactComponent=t()}(this,(function(){"use strict";class e extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:n}=e.target;s(t,n)}render(){const{item:e,isChecked:t,labelFunction:s}=this.props,n=ReactDOMFactories.input({key:`${e.key}${t}`,className:"mr1 v-mid",type:"checkbox",checked:t,onChange:this.handleChange}),a=s(e);return ReactDOMFactories.label({className:"db v-mid"},n,a)}}e.propTypes={item:PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()]).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool,labelFunction:PropTypes.func},e.defaultProps={isChecked:!1,labelFunction:e=>ReactDOMFactories.span({className:"v-mid"},e)};const t={},s=(e,t)=>({...e,...t});t.createButton=(e,t,n,a={})=>{const i=s(a,{key:t,className:n});return ReactDOMFactories.button(i,e)},t.createCell=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dtc"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createFlexbox=(e,t,n,a={})=>{const i=s(a,{key:t,className:"flex"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createFlexboxWrap=(e,t,n,a={})=>{const i=s(a,{key:t,className:"flex flex-wrap"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createImg=(e,t,n,a={})=>{const i=s(a,{src:e,key:t,className:n});return ReactDOMFactories.img(i)},t.createRow=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dt-row"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)},t.createSpan=(e,t,n,a={})=>{const i=s(a,{key:t,className:n});return ReactDOMFactories.span(i,e)},t.createTable=(e,t,n,a={})=>{const i=s(a,{key:t,className:"dt"+(n?` ${n}`:"")});return ReactDOMFactories.div(i,e)};class n extends React.PureComponent{constructor(e){super(e);const{selectedItems:t}=this.props;this.state={selectedItems:t},this.handleApply=this.handleApplyFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this),this.handleSelectAll=this.handleSelectAllFunction.bind(this),this.handleSelectNone=this.handleSelectNoneFunction.bind(this)}handleApplyFunction(){const{applyOnClick:e}=this.props,{selectedItems:t}=this.state;e(t)}handleChangeFunction(e,t){const{selectedItems:s}=this.state;let n;n=t?[...s,e]:s.filter((t=>t!==e)),this.setState({selectedItems:n})}handleSelectAllFunction(){const{items:e}=this.props;this.setState({selectedItems:e})}handleSelectNoneFunction(){this.setState({selectedItems:[]})}createButtonTable(){const{useSelectButtons:e}=this.props,s=t.createButton("Apply","applyButton",void 0,{onClick:this.handleApply}),n=t.createCell(s,"applyCell");let a=n;if(e){const e=t.createButton("Select All","selectAllButton",void 0,{onClick:this.handleSelectAll}),s=t.createButton("Select None","selectNoneButton",void 0,{onClick:this.handleSelectNone});a=[t.createCell(e,"selectAllCell"),t.createCell(s,"selectNoneCell"),n]}const i=t.createRow(a,"buttonRow");return t.createTable(i,"buttonTable","button-table")}render(){const{buttonPanelClass:s,className:n,inputPanelClass:a,items:i,keyFunction:o,labelFunction:l}=this.props,{selectedItems:r}=this.state,p=i.map((s=>{const n=r.includes(s),a=React.createElement(e,{item:s,isChecked:n,labelFunction:l,onChange:this.handleChange}),i=t.createCell(a);return t.createRow(i,o(s))})),c=t.createTable(p,"inputsTable","inputs-table"),u=ReactDOMFactories.div({className:"scroll-pane"},c),d=t.createCell(u,"inputsCell",a),h=t.createCell(this.createButtonTable(),"buttonPanelCell",s),y=[t.createRow(d,"inputRow","input-row"),t.createRow(h,"buttonRow","button-row")];return t.createTable(y,"checkboxPanel",n)}}n.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()])).isRequired,buttonPanelClass:PropTypes.string,className:PropTypes.string,inputPanelClass:PropTypes.string,keyFunction:PropTypes.func,labelFunction:PropTypes.func,selectedItems:PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()])),useSelectButtons:PropTypes.bool},n.defaultProps={buttonPanelClass:"fr pt1",className:void 0,inputPanelClass:"bg-white tl",keyFunction:e=>"object"==typeof e?JSON.stringify(e):e,labelFunction:void 0,selectedItems:[],useSelectButtons:!1};class a extends React.Component{constructor(e){super(e),this.state={isExpanded:e.isExpanded},this.toggleExpand=this.toggleExpandFunction.bind(this)}createElementCell(){const{element:e,elementClass:t}=this.props,{isExpanded:s}=this.state,n=s?"dtc pa1 v-mid":"dn";return ReactDOMFactories.div({key:"elementCell",className:`${t} ${n}`},e)}createTitleCell(){const{title:e,titleClass:s}=this.props,{isExpanded:n}=this.state,a=t.createCell(e,"titleCell","v-mid"),i=n?"▶":"▼",o=ReactDOMFactories.div({key:"expandCell",className:"dtc fr v-mid",onClick:this.toggleExpand},i),l=t.createRow([a,o],"titleExpandRow"),r=t.createTable(l,"titleExpandTable","w-100");return t.createCell(r,"titleCell",s)}toggleExpandFunction(){const{isExpanded:e}=this.state;this.setState({isExpanded:!e})}render(){const{className:e}=this.props,s=this.createTitleCell(),n=this.createElementCell(),a=[t.createRow(s,"titleRow"),t.createRow(n,"elementRow")];return t.createTable(a,"collapsiblePaneTable",e)}}a.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,elementClass:PropTypes.string,isExpanded:PropTypes.bool,titleClass:PropTypes.string},a.defaultProps={className:"bg-light-gray ma1",elementClass:"ma0 tc v-mid",isExpanded:!1,titleClass:"b f5 ph1 pt1 tl"};class i extends React.PureComponent{render(){const{className:e,color:t,title:s}=this.props,n=`rgb(${t.r}, ${t.g}, ${t.b})`,a=`colorSwatch-${t.r},${t.g},${t.b}`;return ReactDOMFactories.div({key:a,className:e,style:{backgroundColor:n},title:s})}}i.propTypes={color:PropTypes.shape({r:PropTypes.number,g:PropTypes.number,b:PropTypes.number}).isRequired,className:PropTypes.string,title:PropTypes.string},i.defaultProps={className:"h-100 w-100",title:void 0};const o=(e,t)=>new Promise(((s,n)=>{const a=new Image;a.addEventListener("load",(()=>{t&&console.log(`Loaded image: ${e} ${a.width}x${a.height}`),s(a)})),a.addEventListener("error",(e=>n(e))),a.src=e}));class l extends React.PureComponent{constructor(e){super(e),this.state={imageMap:{}},this.handleOnClick=this.handleOnClickFunction.bind(this)}componentDidMount(){this.loadImages(),this.paint()}componentDidUpdate(){this.paint()}handleOnClickFunction(e){const{onClick:t}=this.props;t(e)}loadImages(){const{images:e,isVerbose:t}=this.props;for(let s=0;s<e.length;s+=1)o(e[s],t).then((t=>{const{imageMap:n}=this.state,a={...n};a[e[s]]=t,this.setState({imageMap:a})}))}paint(){const{drawLayerFunctions:e,height:t,customKey:s,width:n}=this.props,{imageMap:a}=this.state,i=document.getElementById(s).getContext("2d");e.forEach((e=>{e(i,n,t,a)}))}render(){const{backgroundColor:e,clientProps:t,customKey:s,height:n,title:a,width:i}=this.props,o={...{id:s,key:s,height:n,onClick:this.handleOnClick,style:{backgroundColor:e},title:a,width:i},...t};return ReactDOMFactories.canvas(o)}}l.propTypes={drawLayerFunctions:PropTypes.arrayOf(PropTypes.func).isRequired,backgroundColor:PropTypes.string,clientProps:PropTypes.shape(),customKey:PropTypes.string,height:PropTypes.number,images:PropTypes.arrayOf(PropTypes.string),isVerbose:PropTypes.bool,onClick:PropTypes.func,title:PropTypes.string,width:PropTypes.number},l.defaultProps={backgroundColor:void 0,clientProps:{},customKey:"hexBoardCanvas",height:480,images:[],isVerbose:!1,onClick:()=>{},title:void 0,width:640};class r extends React.PureComponent{constructor(e){super(e);const{initialValue:t}=this.props;this.state={value:t},this.handleBlur=this.handleBlurFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this)}handleBlurFunction(){const{onBlur:e}=this.props,{value:t}=this.state;e(Number(t))}handleChangeFunction(e){const{value:t}=e.target,s=Number(t);this.setState({value:s})}render(){const{className:e,id:t,initialValue:s,max:n,min:a,step:i}=this.props;return ReactDOMFactories.input({id:t,type:"number",className:e,defaultValue:s,max:n,min:a,step:i,onBlur:this.handleBlur,onChange:this.handleChange})}}r.propTypes={onBlur:PropTypes.func.isRequired,id:PropTypes.string,className:PropTypes.string,initialValue:PropTypes.number,max:PropTypes.number,min:PropTypes.number,step:PropTypes.number},r.defaultProps={id:"numberInput",className:void 0,initialValue:0,max:void 0,min:void 0,step:void 0};class p extends React.Component{constructor(e){super(e);const{initialInput:t}=this.props;this.state={input:t}}createButtonsCell(){const{buttons:e,buttonsClass:t}=this.props;return ReactDOMFactories.td({colSpan:2,className:t},e)}createInputCell(){const{inputClass:e}=this.props,{input:t}=this.state;return ReactDOMFactories.td({className:e},t)}createMessageCells(){const{icon:e,message:t,messageClass:s}=this.props;return[ReactDOMFactories.td({key:0,rowSpan:2},e),ReactDOMFactories.td({key:1,className:s},t)]}createTitleCell(){const{title:e,titleClass:t}=this.props;return ReactDOMFactories.td({colSpan:2,className:t},e)}render(){const{className:e}=this.props,t=this.createTitleCell(),s=this.createMessageCells(),n=this.createInputCell(),a=this.createButtonsCell(),i=[ReactDOMFactories.tr({key:"row0"},t),ReactDOMFactories.tr({key:"row1"},s),ReactDOMFactories.tr({key:"row2"},n),ReactDOMFactories.tr({key:"row3"},a)],o=ReactDOMFactories.tbody({},i);return ReactDOMFactories.table({className:e},o)}}p.propTypes={buttons:PropTypes.shape().isRequired,message:PropTypes.oneOfType([PropTypes.string,PropTypes.shape()]).isRequired,title:PropTypes.string.isRequired,buttonsClass:PropTypes.string,className:PropTypes.string,icon:PropTypes.shape(),initialInput:PropTypes.shape(),inputClass:PropTypes.string,messageClass:PropTypes.string,titleClass:PropTypes.string},p.defaultProps={buttonsClass:"pa2 tr",className:"ba bg-white center v-top",icon:void 0,initialInput:void 0,inputClass:void 0,messageClass:void 0,titleClass:"b bg-light-gray f4 tc"};class c extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(e){const{item:t,onChange:s}=this.props,{checked:n}=e.target;s(t,n)}render(){const{item:e,isChecked:t,labelFunction:s}=this.props,n=ReactDOMFactories.input({key:`${e.key}${t}`,className:"mr1 v-mid",type:"radio",checked:t,onChange:this.handleChange}),a=s(e);return ReactDOMFactories.label({className:"db v-mid"},n,a)}}c.propTypes={item:PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()]).isRequired,onChange:PropTypes.func.isRequired,isChecked:PropTypes.bool,labelFunction:PropTypes.func},c.defaultProps={isChecked:!1,labelFunction:e=>ReactDOMFactories.span({className:"v-mid"},e)};class u extends React.PureComponent{constructor(e){super(e);const{selectedItem:t}=this.props;this.state={selectedItem:t},this.handleApply=this.handleApplyFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this)}handleApplyFunction(){const{applyOnClick:e}=this.props,{selectedItem:t}=this.state;e(t)}handleChangeFunction(e){this.setState({selectedItem:e})}createButtonTable(){const e=t.createButton("Apply","applyButton",void 0,{onClick:this.handleApply}),s=t.createCell(e,"applyCell"),n=t.createRow(s,"buttonRow");return t.createTable(n,"buttonTable","button-table")}render(){const{buttonPanelClass:e,className:s,inputPanelClass:n,items:a,keyFunction:i,labelFunction:o}=this.props,{selectedItem:l}=this.state,r=a.map((e=>{const s=l===e,n=React.createElement(c,{item:e,isChecked:s,labelFunction:o,onChange:this.handleChange}),a=t.createCell(n);return t.createRow(a,i(e))})),p=t.createTable(r,"inputsTable","inputs-table"),u=ReactDOMFactories.div({className:"scroll-pane"},p),d=t.createCell(u,"inputsCell",n),h=t.createCell(this.createButtonTable(),"buttonPanelCell",e),y=[t.createRow(d,"inputRow","input-row"),t.createRow(h,"buttonRow","button-row")];return t.createTable(y,"radioButtonPanel",s)}}u.propTypes={applyOnClick:PropTypes.func.isRequired,items:PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()])).isRequired,buttonPanelClass:PropTypes.string,className:PropTypes.string,inputPanelClass:PropTypes.string,keyFunction:PropTypes.func,labelFunction:PropTypes.func,selectedItem:PropTypes.oneOfType([PropTypes.string,PropTypes.number,PropTypes.shape()])},u.defaultProps={buttonPanelClass:"fr pt1",className:void 0,inputPanelClass:"bg-white tl",keyFunction:e=>"object"==typeof e?JSON.stringify(e):e,labelFunction:void 0,selectedItem:void 0};class d extends React.PureComponent{constructor(e){super(e),this.handleChange=this.handleChangeFunction.bind(this)}handleChangeFunction(){const{id:e,onChange:t}=this.props,s=document.getElementById(e);t(s.options[s.selectedIndex].value)}render(){const{attributes:e,id:t,initialValue:s,values:n}=this.props,a=R.pipe(R.assoc("id",t),R.assoc("defaultValue",s),R.assoc("onChange",this.handleChange))(e),i=R.map((e=>{return t=e.key,s=e.label,ReactDOMFactories.option({key:t,value:t},s);var t,s}),n);return ReactDOMFactories.select(a,i)}}d.propTypes={values:PropTypes.arrayOf(PropTypes.shape({key:PropTypes.string.isRequired,label:PropTypes.string.isRequired})).isRequired,onChange:PropTypes.func.isRequired,attributes:PropTypes.shape(),id:PropTypes.string,initialValue:PropTypes.string},d.defaultProps={attributes:{},id:"select",initialValue:void 0};class h extends React.PureComponent{constructor(e){super(e);const{initialValue:t}=this.props;this.state={value:t},this.handleBlur=this.handleBlurFunction.bind(this),this.handleChange=this.handleChangeFunction.bind(this)}handleBlurFunction(){const{onBlur:e}=this.props,{value:t}=this.state;e(t)}handleChangeFunction(e){const{value:t}=e.target;this.setState({value:t})}render(){const{className:e,id:t,initialValue:s}=this.props;return ReactDOMFactories.input({id:t,type:"text",className:e,defaultValue:s,onBlur:this.handleBlur,onChange:this.handleChange})}}h.propTypes={onBlur:PropTypes.func.isRequired,id:PropTypes.string,className:PropTypes.string,initialValue:PropTypes.string},h.defaultProps={id:"stringInput",className:void 0,initialValue:""};class y extends React.Component{createTitleCell(){const{title:e,titleClass:s}=this.props;return t.createCell(e,"titleCell",s)}createElementCell(){const{element:e,elementClass:s}=this.props;return t.createCell(e,"elementCell",s)}render(){const{className:e}=this.props,s=this.createTitleCell(),n=this.createElementCell(),a=[t.createRow(s,"titleRow"),t.createRow(n,"elementRow")];return t.createTable(a,"titledElementTable",e)}}y.propTypes={element:PropTypes.shape().isRequired,title:PropTypes.string.isRequired,className:PropTypes.string,elementClass:PropTypes.string,titleClass:PropTypes.string},y.defaultProps={className:"bg-light-gray ma1",elementClass:"ma0 tc v-mid",titleClass:"b f5 ph1 pt1 tc"};const m={};return m.CheckboxPanel=n,m.CollapsiblePane=a,m.ColorSwatch=i,m.LayeredCanvas=l,m.NumberInput=r,m.OptionPane=p,m.RadioButtonPanel=u,m.ReactUtilities=t,m.Select=d,m.StringInput=h,m.TitledElement=y,Object.freeze(m),m}));
